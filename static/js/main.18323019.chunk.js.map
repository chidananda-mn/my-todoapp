{"version":3,"sources":["RenderListItems.js","App.js","reportWebVitals.js","index.js"],"names":["RenderListItems","selectedItemsList","setSelectedItemsList","map","_each","className","item","onClick","key","newList","filter","deleteListItem","App","useState","currentItem","setCurrentItem","value","onChange","e","target","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAGaA,G,YAAkB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,kBAAmBC,EAAyB,EAAzBA,qBAOnD,OACED,EAAkBE,KAAI,SAACC,GAAD,OAAW,sBAAqBC,UAAU,YAA/B,UAA2C,4BAAID,EAAME,OAAS,wBAAQC,QAAS,kBAN3F,SAACC,GACtB,IAAMC,EAAUR,EAAkBS,QAAO,SAACN,GAAD,OAAUA,EAAMI,MAAMA,KAC/DN,EAAqBO,GAIiGE,CAAeP,EAAMI,MAA5C,iBAApDJ,EAAMI,UCoBtCI,MA3Bf,WAAgB,IAAD,EACyBC,mBAAS,MADlC,mBACNC,EADM,KACOC,EADP,OAEqCF,mBAAS,IAF9C,mBAENZ,EAFM,KAEaC,EAFb,KAYb,OACE,qBAAKG,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACA,sBAAKA,UAAU,UAAf,UACA,sBAAKA,UAAU,gBAAf,UACM,uBAAQW,MAAOF,EAAaG,SAbjB,SAACC,GACpBH,EAAeG,EAAEC,OAAOH,UAalB,wBAAQT,QAXC,WACfL,EAAqB,GAAD,mBAAKD,GAAL,CAAwB,CAAEK,KAAMQ,EAAYN,IAAIY,KAAKC,UACzEN,EAAe,KAST,kBAEA,cAAC,EAAD,CAAiBd,kBAAmBA,EAAmBC,qBAAsBA,YCZxEoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.18323019.chunk.js","sourcesContent":["import React from 'react';\r\nimport './RenderListItems.css';\r\n\r\nexport const RenderListItems = ({ selectedItemsList, setSelectedItemsList})=> {\r\n\r\n  const deleteListItem = (key)=> {\r\n    const newList = selectedItemsList.filter((_each)=> _each.key!==key)\r\n    setSelectedItemsList(newList)\r\n  }\r\n\r\n  return (\r\n    selectedItemsList.map((_each) => <div key={_each.key} className=\"List-view\"><p>{_each.item}</p><button onClick={() => deleteListItem(_each.key)}>x</button></div>)\r\n  )\r\n}","import './App.css';\nimport { useState} from 'react'\nimport { RenderListItems} from './RenderListItems'\n\nfunction App() {\n  const [currentItem, setCurrentItem] = useState(null);\n  const [selectedItemsList, setSelectedItemsList] = useState([]);\n  \n  const inputHandler = (e)=> {\n    setCurrentItem(e.target.value)\n  }\n  const addItems = ()=> {\n    setSelectedItemsList([...selectedItemsList, { item: currentItem,key:Date.now()}])\n    setCurrentItem('')\n  }\n \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div className=\"Wrapper\">  \n      <div className=\"Input-wrapper\">\n            <input  value={currentItem} onChange={inputHandler}/>\n          <button onClick={addItems}>+</button> \n        </div> \n          <RenderListItems selectedItemsList={selectedItemsList} setSelectedItemsList={setSelectedItemsList}/>       \n      </div>\n        </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}